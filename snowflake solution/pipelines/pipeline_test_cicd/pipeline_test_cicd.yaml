# Simplified Azure DevOps Pipeline for Snowflake Git Fetch
# Uses PIPELINEUSER profile to fetch DEVOPS_DATA_PYTHON repository

trigger:
  - dev
  - prod

pool:
  vmImage: ubuntu-latest

variables:
  - group: Snowflake_Credentials_PIPELINEUSER

steps:
  # Install Snowflake CLI
  - script: |
      echo "Installing Snowflake CLI..."
      pip install --upgrade pip
      pip install snowflake-cli-labs
      snow --version
    displayName: 'Install Snowflake CLI'

  # Create both config.toml and connections.toml files
  - script: |
      echo "Creating Snowflake configuration files..."
      
      # Create .snowflake directory
      mkdir -p ~/.snowflake
      
      # Create config.toml
      cat <<EOF > ~/.snowflake/config.toml
      default_connection_name = "PIPELINEUSER"
      EOF
      
      # Create connections.toml
      cat <<EOF > ~/.snowflake/connections.toml
      [PIPELINEUSER]
      account = "$(snowflake_account)"
      user = "$(snowflake_user_pipeline)"
      authenticator = "snowflake"
      password = "$(snowflake_password_pipeline)"
      database = "$(snowflake_database)"
      schema = "$(snowflake_schema)"
      warehouse = "$(snowflake_warehouse)"
      role = "$(snowflake_role_pipeline)"
      stage = "$(snowflake_stage)"
      EOF
      
      # Set correct permissions
      chmod 0600 ~/.snowflake/config.toml
      chmod 0600 ~/.snowflake/connections.toml
      chown $USER ~/.snowflake/config.toml
      chown $USER ~/.snowflake/connections.toml
      
      echo "Configuration files created successfully with correct permissions"
      ls -la ~/.snowflake/
    displayName: 'Create Snowflake Configuration Files'

  # Configure Snowflake CLI
  - script: |
      echo "Testing Snowflake connection..."
      snow connection test -c PIPELINEUSER
    displayName: 'Test Snowflake Connection'

  # Execute Git Fetch
  - script: |
      echo "Executing Snowflake Git Fetch..."
      echo "Fetching DEVOPS_DATA_PYTHON repository using PIPELINEUSER connection..."
      snow git fetch DEVOPS_DATA_PYTHON -c PIPELINEUSER
      echo "Git fetch completed successfully!"
    displayName: 'Snowflake Git Fetch DEVOPS_DATA_PYTHON'

  # Optional: Verify the operation
  - script: |
      echo "Verifying git repositories..."
      snow sql -q "SHOW GIT REPOSITORIES" -c PIPELINEUSER
    displayName: 'Verify Git Repositories'
    continueOnError: true