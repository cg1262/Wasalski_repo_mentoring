# Azure DevOps Pipeline for Snowflake Git Fetch (Windows Agent)
# Uses PIPELINEUSER profile to fetch DEVOPS_DATA_PYTHON repository

trigger:
  - dev
  - main

pool:
  vmImage: windows-latest

variables:
  - group: Snowflake_Credentials_PIPELINEUSER

steps:
  # Install Snowflake CLI
  - powershell: |
      Write-Host "Installing Snowflake CLI..."
      python -m pip install --upgrade pip
      pip install snowflake-cli-labs
      snow --version
    displayName: 'Install Snowflake CLI'

  # Create configuration file with PIPELINEUSER profile
  - powershell: |
      Write-Host "Creating Snowflake configuration for PIPELINEUSER..."
      $configContent = @"
      default_connection_name = 'PIPELINEUSER'
      [connections]
      [connections.PIPELINEUSER]
      account = '$(snowflake_account)'
      user = '$(snowflake_user_pipeline)'
      role = '$(snowflake_role_pipeline)'
      warehouse = '$(snowflake_warehouse)'
      database = '$(snowflake_database)'
      schema = '$(snowflake_schema)'
      authenticator = 'snowflake'
      password = '$(snowflake_password_pipeline)'
      "@
      
      $configContent | Out-File -FilePath "config.toml" -Encoding UTF8
      Write-Host "Configuration file created successfully"
    displayName: 'Create PIPELINEUSER Configuration'

  # Test connection with PIPELINEUSER profile
  - powershell: |
      Write-Host "Testing PIPELINEUSER connection..."
      $env:SNOWFLAKE_CONFIG_PATH = "$(Get-Location)\config.toml"
      snow connection test -c PIPELINEUSER
      snow sql -q "SELECT current_version(), current_user(), current_role()" -c PIPELINEUSER
    displayName: 'Test PIPELINEUSER Connection'

  # Execute git fetch with PIPELINEUSER profile
  - powershell: |
      Write-Host "Executing git fetch DEVOPS_DATA_PYTHON with PIPELINEUSER..."
      $env:SNOWFLAKE_CONFIG_PATH = "$(Get-Location)\config.toml"
      snow git fetch DEVOPS_DATA_PYTHON -c PIPELINEUSER
      Write-Host "Git fetch completed successfully!"
    displayName: 'Snowflake Git Fetch with PIPELINEUSER'

  # Optional: Verify the operation
  - powershell: |
      Write-Host "Verifying git repositories..."
      $env:SNOWFLAKE_CONFIG_PATH = "$(Get-Location)\config.toml"
      snow sql -q "SHOW GIT REPOSITORIES" -c PIPELINEUSER
    displayName: 'Verify Git Repositories'
    continueOnError: true