# Simplified Azure DevOps Pipeline for Snowflake Git Fetch
# Uses PIPELINEUSER profile to fetch DEVOPS_DATA_PYTHON repository

trigger:
  - dev
  - main
  - prod

pool:
  vmImage: ubuntu-latest

variables:
  - group: Snowflake_Credentials_PIPELINEUSER

steps:
  # Install Snowflake CLI
  - script: |
      echo "Installing Snowflake CLI..."
      pip install --upgrade pip
      pip install snowflake-cli-labs
      snow --version
    displayName: 'Install Snowflake CLI'

  # Create configuration file for PIPELINEUSER
  - script: |
      echo "Creating Snowflake configuration for PIPELINEUSER..."
      cat <<EOF > config.toml
      default_connection_name = 'PIPELINEUSER'
      
      [connections]
      [connections.PIPELINEUSER]
      account = '$(snowflake_account)'
      user = '$(snowflake_user_pipeline)'
      role = '$(snowflake_role_pipeline)'
      warehouse = '$(snowflake_warehouse)'
      database = '$(snowflake_database)'
      schema = '$(snowflake_schema)'
      authenticator = 'snowflake'
      password = '$(snowflake_password_pipeline)'
      EOF
      
      echo "Configuration created successfully"
    displayName: 'Create PIPELINEUSER Configuration'

  # Configure Snowflake CLI
  - script: |
      echo "Configuring Snowflake CLI..."
      export SNOWFLAKE_CONFIG_PATH="$(pwd)/config.toml"
      snow connection test -c PIPELINEUSER
    displayName: 'Test Snowflake Connection'

  # Execute Git Fetch
  - script: |
      echo "Executing Snowflake Git Fetch..."
      export SNOWFLAKE_CONFIG_PATH="$(pwd)/config.toml"
      
      echo "Fetching DEVOPS_DATA_PYTHON repository using PIPELINEUSER connection..."
      snow git fetch DEVOPS_DATA_PYTHON -c PIPELINEUSER
      
      echo "Git fetch completed successfully!"
    displayName: 'Snowflake Git Fetch DEVOPS_DATA_PYTHON'

  # Optional: Verify the operation
  - script: |
      echo "Verifying git repositories..."
      export SNOWFLAKE_CONFIG_PATH="$(pwd)/config.toml"
      snow sql -q "SHOW GIT REPOSITORIES" -c PIPELINEUSER
    displayName: 'Verify Git Repositories'
    continueOnError: true